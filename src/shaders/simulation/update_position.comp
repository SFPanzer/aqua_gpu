#version 450

layout(local_size_x = 256) in;

layout(push_constant) uniform Constants
{
    vec4 aabb_min;
    vec4 aabb_max;
    uint particle_count;
    float dt;
}
constants;

layout(binding = 0) buffer VelocityBuffer
{
    vec4 velocities[];
};

layout(binding = 1) buffer PositionBuffer
{
    vec4 positions[];
};

void main()
{
    uint id = gl_GlobalInvocationID.x;
    if (id >= constants.particle_count)
        return;

    vec4 velocity = velocities[id];
    vec4 position = positions[id];

    position += velocity * constants.dt;

    for (int i = 0; i < 3; ++i)
    {
        if (position[i] < constants.aabb_min[i])
        {
            position[i] = constants.aabb_min[i];
            velocity[i] = -velocity[i];
        }
        if (position[i] > constants.aabb_max[i])
        {
            position[i] = constants.aabb_max[i];
            velocity[i] = -velocity[i];
        }
    }

    positions[id] = position;
    velocities[id] = velocity;
}