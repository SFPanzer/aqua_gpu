#version 450

#define WORKGROUP_SIZE 256
#define RADIX_SORT_BINS 256

layout(local_size_x = WORKGROUP_SIZE) in;

layout(push_constant) uniform Constants
{
    uint num_particles;
    uint shift_bits;
    uint num_work_groups;
    uint num_blocks_per_work_group;
}
constants;

layout(set = 0, binding = 0) buffer HashBuffer
{
    uint hashes[];
};

layout(set = 0, binding = 1) buffer HistogramBuffer
{
    uint histograms[];
};

shared uint[RADIX_SORT_BINS] histogram;

void main()
{
    uint global_id = gl_GlobalInvocationID.x;
    uint local_id = gl_LocalInvocationID.x;
    uint work_group_id = gl_WorkGroupID.x;

    // Initialize histogram
    if (local_id < RADIX_SORT_BINS)
    {
        histogram[local_id] = 0U;
    }
    barrier();

    for (uint index = 0; index < constants.num_blocks_per_work_group; index++)
    {
        uint element_id = work_group_id * constants.num_blocks_per_work_group * WORKGROUP_SIZE + index * WORKGROUP_SIZE + local_id;
        if (element_id < constants.num_particles)
        {
            // Determine the bin
            const uint bin = uint(hashes[element_id] >> constants.shift_bits) & uint(RADIX_SORT_BINS - 1);
            // Increment the histogram
            atomicAdd(histogram[bin], 1U);
        }
    }
    barrier();

    if (local_id < RADIX_SORT_BINS)
    {
        histograms[RADIX_SORT_BINS * work_group_id + local_id] = histogram[local_id];
    }
}